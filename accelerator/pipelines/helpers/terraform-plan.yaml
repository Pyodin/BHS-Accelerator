---
parameters:
  - name: terraform_action
    default: 'apply'
  - name: serviceConnection
  - name: root_module_folder_relative_path
    default: '.'
  - name: target_subscription_id

steps:
  - task: AzureCLI@2
    displayName: Terraform Plan for ${{ coalesce(parameters.terraform_action, 'Apply') }}
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -e

        # Logout of Azure CLI to prove we are not using that auth method
        az logout

        # Export ARM variables using Azure DevOps built-in environment variables  
        export ARM_TENANT_ID=$AZURESUBSCRIPTION_TENANT_ID
        export ARM_SUBSCRIPTION_ID="${{ parameters.target_subscription_id }}"
        export ARM_CLIENT_ID=$AZURESUBSCRIPTION_CLIENT_ID
        export ARM_OIDC_AZURE_SERVICE_CONNECTION_ID=$AZURESUBSCRIPTION_SERVICE_CONNECTION_ID
        export ARM_USE_OIDC="true"

        # Build terraform command arguments
        terraform_args=()
        terraform_args+=("-chdir=${{ parameters.root_module_folder_relative_path }}")
        terraform_args+=("plan")
        terraform_args+=("-out=tfplan")
        terraform_args+=("-input=false")

        if [ "$TERRAFORM_ACTION" = "destroy" ]; then
          terraform_args+=("-destroy")
        fi

        echo "Running: terraform ${terraform_args[@]}"
        terraform "${terraform_args[@]}"

    env:
      TERRAFORM_ACTION: ${{ coalesce(parameters.terraform_action, 'apply') }}
      ARM_OIDC_REQUEST_TOKEN: $(System.AccessToken)
