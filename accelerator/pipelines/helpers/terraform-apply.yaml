---
parameters:
  - name: terraform_action
    default: "apply"
  - name: serviceConnection
  - name: root_module_folder_relative_path
    default: "."
  - name: target_subscription_id

steps:
  - task: AzureCLI@2
    displayName: "Terraform Apply"
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
        set -e

        # Get settings from service connection
        ACCOUNT=$(az account show 2>/dev/null)
        CLIENT_ID=$(echo $ACCOUNT | jq -r '.user.name')
        OIDC_TOKEN=$idToken # requires addSpnToEnvironment: true
        SUBSCRIPTION_ID="${{ parameters.target_subscription_id }}"   
        TENANT_ID=$(echo $ACCOUNT | jq -r '.tenantId')

        # Debug: Show the token subject for troubleshooting
        echo "DEBUG: Client ID: $CLIENT_ID"
        echo "DEBUG: Tenant ID: $TENANT_ID"
        echo "DEBUG: Build Source Branch: $BUILD_SOURCEBRANCH"
        echo "DEBUG: Build Repository Name: $BUILD_REPOSITORY_NAME"
        echo "DEBUG: System Team Project: $SYSTEM_TEAMPROJECT"

        export ARM_TENANT_ID=$TENANT_ID
        export ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID
        export ARM_OIDC_TOKEN=$OIDC_TOKEN
        export ARM_USE_OIDC="true"
        export ARM_CLIENT_ID=$CLIENT_ID
        export ARM_USE_AZUREAD="true"

        # Run terraform apply using the plan file from the artifact
        terraform -chdir="${{ parameters.root_module_folder_relative_path }}" apply -auto-approve -input=false tfplan

